apiVersion: v1
kind: Pod
metadata:
  annotations:
    dns.alpha.kubernetes.io/internal: kops-controller.internal.newstuffa-8.jb.io
  creationTimestamp: "2023-03-21T15:14:39Z"
  generateName: kops-controller-
  labels:
    controller-revision-hash: 758d7bd4fd
    k8s-addon: kops-controller.addons.k8s.io
    k8s-app: kops-controller
    kops.k8s.io/managed-by: kops
    pod-template-generation: "1"
    version: v1.25.0
  name: kops-controller-scnz6
  namespace: kube-system
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: DaemonSet
    name: kops-controller
    uid: 3cfb03eb-f1b2-4be5-a4ce-9cbb68570047
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchFields:
          - key: metadata.name
            operator: In
            values:
            - i-0818197f5dee720c3
  containers:
  - args:
    - --v=2
    - --conf=/etc/kubernetes/kops-controller/config/config.yaml
    env:
    - name: KUBERNETES_SERVICE_HOST
      value: 127.0.0.1
    image: registry.k8s.io/kops/kops-controller:1.25.0@sha256:ffca50fd02426835e9b3c51d950e0726774de27934d944457a0391d8ba64a5e6
    imagePullPolicy: IfNotPresent
    name: kops-controller
    resources:
      requests:
        cpu: 50m
        memory: 50Mi
    securityContext:
      runAsNonRoot: true
      runAsUser: 10011
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/kubernetes/kops-controller/config/
      name: kops-controller-config
    - mountPath: /etc/kubernetes/kops-controller/pki/
      name: kops-controller-pki
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-mksxb
      readOnly: true
  dnsPolicy: Default
  enableServiceLinks: true
  hostNetwork: true
  nodeName: i-0818197f5dee720c3
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: kops-controller
  serviceAccountName: kops-controller
  terminationGracePeriodSeconds: 30
  tolerations:
  - key: node.cloudprovider.kubernetes.io/uninitialized
    operator: Exists
  - key: node.kubernetes.io/not-ready
    operator: Exists
  - key: node-role.kubernetes.io/master
    operator: Exists
  - key: node-role.kubernetes.io/control-plane
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/disk-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/pid-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/unschedulable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/network-unavailable
    operator: Exists
  volumes:
  - configMap:
      defaultMode: 420
      name: kops-controller
    name: kops-controller-config
  - hostPath:
      path: /etc/kubernetes/kops-controller/
      type: Directory
    name: kops-controller-pki
  - name: kube-api-access-mksxb
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
