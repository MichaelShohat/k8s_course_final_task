apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2023-03-21T15:14:39Z"
  generateName: aws-cloud-controller-manager-
  labels:
    controller-revision-hash: 78fb9d68dd
    k8s-app: aws-cloud-controller-manager
    kops.k8s.io/managed-by: kops
    pod-template-generation: "1"
  name: aws-cloud-controller-manager-48ptb
  namespace: kube-system
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: DaemonSet
    name: aws-cloud-controller-manager
    uid: 3bffd509-0775-4e08-b50c-7438911d1bb3
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchFields:
          - key: metadata.name
            operator: In
            values:
            - i-0818197f5dee720c3
  containers:
  - args:
    - --allocate-node-cidrs=true
    - --cluster-cidr=100.64.0.0/10
    - --cluster-name=newstuffa-8.jb.io
    - --configure-cloud-routes=false
    - --leader-elect=true
    - --v=2
    - --cloud-provider=aws
    - --use-service-account-credentials=true
    - --cloud-config=/etc/kubernetes/cloud.config
    env:
    - name: KUBERNETES_SERVICE_HOST
      value: 127.0.0.1
    image: registry.k8s.io/provider-aws/cloud-controller-manager:v1.25.0@sha256:d12285173cb301d08ce1a56256782478ec2ec334f3af345b9f753b8de2598aad
    imagePullPolicy: IfNotPresent
    name: aws-cloud-controller-manager
    resources:
      requests:
        cpu: 200m
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/kubernetes/cloud.config
      name: cloudconfig
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-hvn8s
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  nodeName: i-0818197f5dee720c3
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: aws-cloud-controller-manager
  serviceAccountName: aws-cloud-controller-manager
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoSchedule
    key: node.cloudprovider.kubernetes.io/uninitialized
    value: "true"
  - effect: NoSchedule
    key: node.kubernetes.io/not-ready
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/disk-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/pid-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/unschedulable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/network-unavailable
    operator: Exists
  volumes:
  - hostPath:
      path: /etc/kubernetes/cloud.config
      type: ""
    name: cloudconfig
  - name: kube-api-access-hvn8s
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
